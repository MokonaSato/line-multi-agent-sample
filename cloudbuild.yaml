# cloudbuild.yaml - MCP統合版
steps:
  # 1. メインアプリケーションのビルド
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-main-app'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/line-multi-agent:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/line-multi-agent:$SHORT_SHA'
      - '.'
    waitFor: ['-']

  # 2. MCP Filesystem Server の取得とタグ付け
  - name: 'gcr.io/cloud-builders/docker'
    id: 'pull-mcp-filesystem'
    args:
      - 'pull'
      - 'mcp/filesystem:latest'
    waitFor: ['-']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'tag-mcp-filesystem'
    args:
      - 'tag'
      - 'mcp/filesystem:latest'
      - 'gcr.io/$PROJECT_ID/mcp-filesystem:latest'
    waitFor: ['pull-mcp-filesystem']

  # 3. メインアプリケーションのプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-main-app'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/line-multi-agent:latest'
    waitFor: ['build-main-app']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-main-app-sha'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/line-multi-agent:$SHORT_SHA'
    waitFor: ['build-main-app']

  # 4. MCP Filesystem Server のプッシュ
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-mcp-filesystem'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/mcp-filesystem:latest'
    waitFor: ['tag-mcp-filesystem']

  # 5. Cloud Run サービス設定ファイルを更新
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'update-service-config'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # 環境変数を .env から読み込み
        source .env
        
        # サービス設定ファイルのイメージタグを更新
        sed -i "s|gcr.io/PROJECT_ID/line-multi-agent:latest|gcr.io/$PROJECT_ID/line-multi-agent:$SHORT_SHA|g" cloud-run-service.yaml
        sed -i "s|mcp/filesystem:latest|gcr.io/$PROJECT_ID/mcp-filesystem:latest|g" cloud-run-service.yaml
        sed -i "s|PROJECT_ID|$PROJECT_ID|g" cloud-run-service.yaml
        
        # 環境変数を実際の値に置換
        sed -i "s|\${GOOGLE_API_KEY}|$GOOGLE_API_KEY|g" cloud-run-service.yaml
        sed -i "s|\${NOTION_TOKEN}|$NOTION_TOKEN|g" cloud-run-service.yaml
        sed -i "s|\${LINE_CHANNEL_ACCESS_TOKEN}|$LINE_CHANNEL_ACCESS_TOKEN|g" cloud-run-service.yaml
        sed -i "s|\${LINE_CHANNEL_SECRET}|$LINE_CHANNEL_SECRET|g" cloud-run-service.yaml
    waitFor: ['push-main-app-sha', 'push-mcp-filesystem']

  # 6. Cloud Run サービスにデプロイ
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'deploy-cloud-run'
    args:
      - 'run'
      - 'services'
      - 'replace'
      - 'cloud-run-service.yaml'
      - '--region=$_REGION'
    waitFor: ['update-service-config']

  # 7. トラフィックの切り替え
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'update-traffic'
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'line-multi-agent'
      - '--to-latest'
      - '--region=$_REGION'
    waitFor: ['deploy-cloud-run']

# 置換変数
substitutions:
  _REGION: 'asia-northeast1'
  _SERVICE_NAME: 'line-multi-agent'

# ビルドオプション
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'

# ビルド成果物の設定
images:
  - 'gcr.io/$PROJECT_ID/line-multi-agent:latest'
  - 'gcr.io/$PROJECT_ID/line-multi-agent:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/mcp-filesystem:latest'

# タイムアウト設定
timeout: '1200s'