apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations:
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
    run.googleapis.com/urls: '["https://line-multi-agent-292672379303.asia-northeast1.run.app","https://line-multi-agent-fevis6wfsq-an.a.run.app"]'
  labels:
    cloud.googleapis.com/location: asia-northeast1
  name: line-multi-agent
  namespace: '292672379303'
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/maxScale: '10'
        run.googleapis.com/cpu-throttling: 'false'
        run.googleapis.com/execution-environment: gen2
      labels:
        run.googleapis.com/startupProbeType: Default
    spec:
      containerConcurrency: 10
      containers:
      - env:
        - name: GOOGLE_CLOUD_PROJECT
          value: gen-lang-client-0075173573
        - name: PYTHONPATH
          value: /app
        - name: NOTION_MCP_URL
          value: http://localhost:3001/sse
        - name: FILESYSTEM_MCP_URL
          value: http://localhost:8000/sse
        - name: MCP_ENABLED
          value: 'true'
        - name: MCP_TIMEOUT_SECONDS
          value: '30'
        - name: NOTION_TOKEN
          valueFrom:
            secretKeyRef:
              key: latest
              name: notion-api-key
        image: gcr.io/gen-lang-client-0075173573/line-multi-agent:64977129-2e00-433f-9bb1-31475097d235
        name: line-multi-agent
        ports:
        - containerPort: 8080
          name: http1
        resources:
          limits:
            cpu: '1'
            memory: 1.5Gi
        startupProbe:
          failureThreshold: 1
          periodSeconds: 240
          tcpSocket:
            port: 8080
          timeoutSeconds: 240
      - args:
        - -c
        - |
          set -e
          echo "Installing Filesystem MCP Server and supergateway..."
          npm install -g @modelcontextprotocol/server-filesystem supergateway
          echo "Starting Filesystem MCP Server with supergateway on port 8000..."
          exec npx supergateway --stdio "npx @modelcontextprotocol/server-filesystem /tmp" --port 8000 --healthEndpoint /health
        command:
        - /bin/sh
        env:
        - name: PORT
          value: '8000'
        image: node:20-alpine
        name: filesystem-mcp-server
        resources:
          limits:
            cpu: '0.25'
            memory: 256Mi
      - args:
        - -c
        - |
          set -e
          echo "Installing Notion MCP Server and supergateway..."
          npm install -g @notionhq/notion-mcp-server supergateway
          echo "Verifying NOTION_TOKEN is set..."
          if [ -z "$NOTION_TOKEN" ]; then
            echo "ERROR: NOTION_TOKEN is not set"
            exit 1
          fi
          echo "NOTION_TOKEN is set (length: ${#NOTION_TOKEN})"
          # Clean the token and properly set OPENAPI_MCP_HEADERS for MCP Server
          CLEAN_TOKEN=$(echo "$NOTION_TOKEN" | tr -d '\n\r' | xargs)
          echo "Setting up OPENAPI_MCP_HEADERS environment variable for MCP Server..."
          export OPENAPI_MCP_HEADERS="{\"Authorization\":\"Bearer ${CLEAN_TOKEN}\",\"Notion-Version\":\"2022-06-28\"}"
          echo "OPENAPI_MCP_HEADERS configured: $(echo $OPENAPI_MCP_HEADERS | sed 's/Bearer [^"]*"/Bearer ***"/')"
          echo "Testing Notion MCP Server directly..."
          timeout 10s npx @notionhq/notion-mcp-server || echo "Direct test completed"
          echo "Starting Notion MCP Server with supergateway and proper environment variables..."
          exec npx supergateway --stdio "npx @notionhq/notion-mcp-server" --port 3001 --healthEndpoint /health
        command:
        - /bin/sh
        env:
        - name: PORT
          value: '3001'
        - name: NOTION_TOKEN
          valueFrom:
            secretKeyRef:
              key: latest
              name: notion-api-key
        - name: OPENAPI_MCP_HEADERS
          value: '{"Authorization":"Bearer $(NOTION_TOKEN)","Notion-Version":"2022-06-28"}'
        image: node:20-alpine
        name: notion-mcp-server
        resources:
          limits:
            cpu: '0.25'
            memory: 256Mi
      serviceAccountName: 292672379303-compute@developer.gserviceaccount.com
      timeoutSeconds: 300
  traffic:
  - latestRevision: true
    percent: 100
