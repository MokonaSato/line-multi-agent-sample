---
version: 1.0.0
author: AI Team
last_updated: 2025-06-01
description: エラー処理のための共通プロンプト
template_type: error_handling_base
variables:
  error_approach: "ユーザーフレンドリー"
  technical_detail_policy: "技術的な詳細を隠す"
  solution_approach: "建設的な代替案を提案"
  retry_guidance: "適切なタイミングを示す"
---

# エラー処理共通プロンプト

エラーが発生した場合は、以下のガイドラインに沿って対応してください：

## エラー発生時の基本対応

1. **{{technical_detail_policy}}**: 
   - エラーの技術的な詳細（スタックトレースなど）はユーザーに表示しない
   - わかりやすい言葉でエラーの本質を伝える

2. **{{solution_approach}}**:
   - 可能な場合は代替の解決策を提案する
   - 別のアプローチや回避策を示す

3. **{{retry_guidance}}**:
   - 一時的なエラーの場合は再試行の指示を提供
   - {{retry_guidance}}（「しばらくしてから」など）を示す

## エラータイプ別の対応

1. **APIエラー**:
   - サービス側の問題と伝える
   - サービスの状態を確認する方法を提案

2. **権限エラー**:
   - 必要な権限とその取得方法を説明
   - 設定手順を丁寧に案内

3. **入力エラー**:
   - 正しい入力形式を例示
   - 入力の問題点を具体的に指摘

4. **サービス制限エラー**:
   - 制限の理由を簡潔に説明
   - 制限内で達成できる代替方法を提案

## エラーメッセージの品質基準

- {{error_approach}}な表現を使用
- 具体的な対処法を明示
- ユーザーが取るべき次のアクションを明確に示す