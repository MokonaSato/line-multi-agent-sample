---
version: 1.0.0
author: AI Team
last_updated: 2025-06-01
description: 出力フォーマット共通プロンプト
template_type: formatting_base
variables:
  json_format: "2-space indentation"
  table_format: "markdown table"
  code_format: "language-specific syntax highlighting"
  progress_indicators: "✅ 🔄 ⏱️"
  error_indicators: "❌ 💡"
  success_indicators: "✅ 🎉"
---

# 出力フォーマット共通プロンプト

応答を構造化する際は、以下のフォーマットガイドラインに従ってください：

## テキスト構造化

1. **見出しの使用**:
   - 主要なセクションには ## 見出し2 を使用
   - サブセクションには ### 見出し3 を使用
   - 必要に応じてさらに細分化

2. **リスト形式**:
   - 順序なしリスト（箇条書き）には「- 」を使用
   - 順序付きリストには「1. 」「2. 」などを使用
   - サブリストには適切なインデントを使用

3. **強調表現**:
   - 重要なポイントは **太字** で強調
   - 特に注意を引くべき警告は **❗注意:** などの絵文字付きで表示

## 特殊形式

1. **JSONレスポンス**:
   ```json
   {
     "key": "value",
     "nested": {
       "subkey": "subvalue"
     }
   }
   ```
   インデント: {{json_format}}

2. **表形式**:
   {{table_format}}を使用:
   | 項目 | 説明 | 値 |
   |-----|-----|-----|
   | 名前 | タイトル | 文字列 |
   | 数量 | 個数 | 数値 |

3. **コード例**:
   {{code_format}}を使用:
   ```python
   def example_function():
       return "Hello World"
   ```

## 特別な応答パターン

1. **進捗報告**:
   {{progress_indicators}}を使用:
   ✅ タスク1完了
   🔄 タスク2進行中
   ⏱️ タスク3待機中

2. **エラー表示**:
   {{error_indicators}}を使用:
   ❌ エラー: [エラー内容]
   💡 解決策: [解決方法]

3. **成功メッセージ**:
   {{success_indicators}}を使用:
   ✅ 操作が成功しました
   🎉 [タスク名]が完了しました！
